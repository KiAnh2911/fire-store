{"version":3,"file":"todoHandlers.js","names":["_todoRespository","require","getTodos","ctx","limit","sort","query","data","getListTodo","status","body","todo","error","success","message","addTodo","postData","request","getAdd","console","updataMany","todos","update","updateTodos","removeMany","id","remove","removeManyTodo"],"sources":["../../src/handlers/todoHandlers.js"],"sourcesContent":["import {\n  getListTodo,\n  getAdd,\n  removeManyTodo,\n  updateTodos,\n} from \"../database/todoRespository\";\n\nexport async function getTodos(ctx) {\n  try {\n    const { limit, sort } = ctx.query;\n    const data = await getListTodo(sort, limit);\n    ctx.status = 200;\n    return (ctx.body = {\n      todo: data,\n    });\n  } catch (error) {\n    ctx.status = 400;\n    ctx.body = {\n      success: false,\n      error: error.message,\n    };\n  }\n}\n\nexport async function addTodo(ctx) {\n  try {\n    const postData = ctx.request.body;\n    const data = await getAdd(postData);\n\n    ctx.status = 201;\n    return (ctx.body = {\n      success: true,\n      todo: data,\n    });\n  } catch (error) {\n    console.error(\"error\", error);\n    ctx.status = 500;\n    ctx.body = {\n      success: false,\n      data: [],\n      error: error.message,\n    };\n  }\n}\n\nexport async function updataMany(ctx) {\n  try {\n    const todos = ctx.request.body;\n    const update = await updateTodos(todos);\n    ctx.status = 200;\n    return (ctx.body = {\n      success: true,\n      todo: update,\n    });\n  } catch (error) {\n    console.error(\"error\", error);\n    ctx.status = 500;\n    ctx.body = {\n      success: false,\n      todo: [],\n      error: error.message,\n    };\n  }\n}\n\nexport async function removeMany(ctx) {\n  try {\n    const id = ctx.request.body;\n    const remove = await removeManyTodo(id);\n    ctx.status = 200;\n    return (ctx.body = {\n      success: true,\n      todo: remove,\n    });\n  } catch (error) {\n    console.error(\"error\", error);\n    ctx.status = 500;\n    ctx.body = {\n      success: false,\n      todo: [],\n      error: error.message,\n    };\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAOO,eAAeC,QAAQA,CAACC,GAAG,EAAE;EAClC,IAAI;IACF,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,GAAG,CAACG,KAAK;IACjC,MAAMC,IAAI,GAAG,MAAM,IAAAC,4BAAW,EAACH,IAAI,EAAED,KAAK,CAAC;IAC3CD,GAAG,CAACM,MAAM,GAAG,GAAG;IAChB,OAAQN,GAAG,CAACO,IAAI,GAAG;MACjBC,IAAI,EAAEJ;IACR,CAAC;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdT,GAAG,CAACM,MAAM,GAAG,GAAG;IAChBN,GAAG,CAACO,IAAI,GAAG;MACTG,OAAO,EAAE,KAAK;MACdD,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF;AAEO,eAAeC,OAAOA,CAACZ,GAAG,EAAE;EACjC,IAAI;IACF,MAAMa,QAAQ,GAAGb,GAAG,CAACc,OAAO,CAACP,IAAI;IACjC,MAAMH,IAAI,GAAG,MAAM,IAAAW,uBAAM,EAACF,QAAQ,CAAC;IAEnCb,GAAG,CAACM,MAAM,GAAG,GAAG;IAChB,OAAQN,GAAG,CAACO,IAAI,GAAG;MACjBG,OAAO,EAAE,IAAI;MACbF,IAAI,EAAEJ;IACR,CAAC;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7BT,GAAG,CAACM,MAAM,GAAG,GAAG;IAChBN,GAAG,CAACO,IAAI,GAAG;MACTG,OAAO,EAAE,KAAK;MACdN,IAAI,EAAE,EAAE;MACRK,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF;AAEO,eAAeM,UAAUA,CAACjB,GAAG,EAAE;EACpC,IAAI;IACF,MAAMkB,KAAK,GAAGlB,GAAG,CAACc,OAAO,CAACP,IAAI;IAC9B,MAAMY,MAAM,GAAG,MAAM,IAAAC,4BAAW,EAACF,KAAK,CAAC;IACvClB,GAAG,CAACM,MAAM,GAAG,GAAG;IAChB,OAAQN,GAAG,CAACO,IAAI,GAAG;MACjBG,OAAO,EAAE,IAAI;MACbF,IAAI,EAAEW;IACR,CAAC;EACH,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7BT,GAAG,CAACM,MAAM,GAAG,GAAG;IAChBN,GAAG,CAACO,IAAI,GAAG;MACTG,OAAO,EAAE,KAAK;MACdF,IAAI,EAAE,EAAE;MACRC,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF;AAEO,eAAeU,UAAUA,CAACrB,GAAG,EAAE;EACpC,IAAI;IACF,MAAMsB,EAAE,GAAGtB,GAAG,CAACc,OAAO,CAACP,IAAI;IAC3B,MAAMgB,MAAM,GAAG,MAAM,IAAAC,+BAAc,EAACF,EAAE,CAAC;IACvCtB,GAAG,CAACM,MAAM,GAAG,GAAG;IAChB,OAAQN,GAAG,CAACO,IAAI,GAAG;MACjBG,OAAO,EAAE,IAAI;MACbF,IAAI,EAAEe;IACR,CAAC;EACH,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7BT,GAAG,CAACM,MAAM,GAAG,GAAG;IAChBN,GAAG,CAACO,IAAI,GAAG;MACTG,OAAO,EAAE,KAAK;MACdF,IAAI,EAAE,EAAE;MACRC,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF"}